{"version":3,"sources":["components/Todos/Todos.js","App.js","reportWebVitals.js","index.js","store/index.js"],"names":["Todos","props","handleCompleteTodo","id","state_key_where_todo_is","completeTodo","handleTrashTodo","trashTodo","handleDeleteTodo","deleteTodo","handleUncompleteTodo","uncompleteTodo","handleDynamicProps","eval","drilled","props_to_map","handleDynamicHandlers","action","upperFirstLetter","str","charAt","toUpperCase","slice","Fragment","_","isEmpty","title","map","item","className","description","actions","onClick","type","mapStateToProps","state","mapDispatchToProps","addTodo","connect","task","React","useRef","useEffect","console","log","sanitizeString","string","trim","createNotification","NotificationManager","info","success","warning","error","alert","ref","placeholder","inputValue","current","value","length","handleAddTodo","todos","completed_todos","trash","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById","ADD_TODO","COMPLETE_TODO","TRASH_TODO","DELETE_TODO","UNCOMPLETE_TODO","todo","payload","add_to_another_key_in_state__action","currentKey","additional_properties","filter","find","initalState","loading","middleware","thunk","createStore","Math","floor","random","completed","history","createdAt","Date","toJSON","replace","composeWithDevTools","applyMiddleware"],"mappings":"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","file":"static/js/main.c9c37d54.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './Todos.module.scss';\nimport _ from 'underscore';\n\n// REDUX\nimport {connect} from 'react-redux';\n// STORE\nimport {\n  addTodo, \n  completeTodo, \n  trashTodo, \n  deleteTodo,\n  uncompleteTodo\n} from '../../store';\n\nconst Todos = (props) => {\n\n  /**\n  * Handlers\n  */\n  const handleCompleteTodo = (id, state_key_where_todo_is) => {\n    props.completeTodo(id, state_key_where_todo_is);\n  }//END handleCompleteTodo\n\n  \n  const handleTrashTodo = (id, state_key_where_todo_is) => {\n    props.trashTodo(id, state_key_where_todo_is);\n  }//END handleTrashTodo\n\n  const handleDeleteTodo = (id, state_key_where_todo_is) => {\n    props.deleteTodo(id, state_key_where_todo_is);\n  }\n\n  const handleUncompleteTodo = (id, state_key_where_todo_is) => {\n    props.uncompleteTodo(id, state_key_where_todo_is);\n  }\n\n  const handleDynamicProps = () => {\n    return eval(`props.${props.drilled.props_to_map}`); \n  }\n\n  const handleDynamicHandlers = (action) => {\n    return eval(`handle${upperFirstLetter(action)}Todo`); \n  }\n\n  /**\n   * Helpers\n   */\n  const upperFirstLetter = (str)=> str.charAt(0).toUpperCase() + str.slice(1);\n\n\n  /**\n   * JSX\n   */\n  return (\n    <React.Fragment>\n      {\n        _.isEmpty(handleDynamicProps())\n        ?\n        <h6>{props.drilled.title + ' Empty'}</h6>\n        :\n        <React.Fragment>\n          <h6>{props.drilled.title}</h6>\n          {handleDynamicProps().map((item)=>(\n            <div className=\"input-group mb-3\" key={item.id}>\n              {/* <input type=\"text\" className=\"form-control\" value=\"todo 1s\" placeholder=\"\" /> */}\n              <div className=\"form-control text-left\">{item.description}</div>\n              <div className=\"input-group-append\">\n                {props.drilled.actions.map(action=>(\n                  <button \n                  // complete the task by the to do id\n                  onClick={()=>eval(handleDynamicHandlers(action))(item.id, props.drilled.props_to_map)}\n                  className=\"btn btn-outline-success\" \n                  type=\"button\">\n                    {upperFirstLetter(action)}\n                  </button>\n                ))}{/* END Dynamic actions */}\n              </div>\n            </div>\n          ))}{/* END Dynamic Props */}\n        </React.Fragment>\n      }\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = (state) => (state)\nconst mapDispatchToProps = {\n  addTodo,\n  completeTodo,\n  trashTodo,\n  deleteTodo,\n  uncompleteTodo\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\n","// REACT\nimport React from 'react';\n// External Packages\nimport _ from 'underscore';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\n\n// CSS\nimport './App.scss';\n// REDUX\nimport {connect} from 'react-redux';\n// STORE\nimport {\n  addTodo, \n  completeTodo, \n  trashTodo, \n  deleteTodo\n} from './store';\n\n// EXTERNAL COMPONENTS\nimport Todos from './components/Todos/Todos';\n\n// CURRENT COMPONENT\nfunction App(props) {\n  // Variables\n  const task = React.useRef('');\n\n  // component did mount\n  React.useEffect(()=>{\n    console.log('props changed', props)\n  },[props]);\n\n  const handleAddTodo = () => {\n    // get the input value\n    const inputValue = task.current.value; \n    // store the value in the store\n    // add a todo ony if the value is greater than 1\n    if (inputValue.length >= 1) {\n      // show success notification\n      createNotification('success')();\n      // reset the add task text\n      task.current.value = '';\n      // add to store the task\n      props.addTodo(sanitizeString(inputValue));\n    } else {\n      // do something if the value is less than 1\n      // show a notification\n      createNotification('warning')();\n    }\n  }//END handleAddTodo\n\n  /**\n   * Helpers\n   */\n  const sanitizeString = (string) => {\n    return string.trim();\n  }\n\n  // Reference: https://www.npmjs.com/package/react-notifications\n  const createNotification = (type) => {\n    return () => {\n      switch (type) {\n        case 'info':\n          NotificationManager.info('Info message');\n          break;\n        case 'success':\n          NotificationManager.success('Success', 'Task Added');\n          break;\n        case 'warning':\n          NotificationManager.warning('At least 1 letter is required', 'Warning', 1500);\n          break;\n        case 'error':\n          NotificationManager.error('Error message', 'Click me!', 5000, () => {\n            alert('callback');\n          });\n          break;\n        default:\n            NotificationManager.error('Error message', 'Click me!', 5000, () => {\n              alert('callback');\n            });\n          break;\n      }//END switch\n    };//returned annonymos function\n  };//END createNotification\n\n\n  /**\n   * JSX\n   */\n  return (\n    <div className=\"App\">\n      <NotificationContainer/>\n      <header className=\"App-header container\">\n        <h3>To Do</h3>\n        {/* ADD TODO */}\n        <div className=\"input-group mb-5\">\n          {/* Add new Task */}\n          <input\n          // onChange={(evnt)=>handleChange(evnt)} \n          ref={task} \n          type=\"text\" \n          className=\"form-control\" \n          placeholder=\"Add new task\" \n          />\n          <div className=\"input-group-append\">\n            <button\n            onClick={()=>handleAddTodo()}\n            className=\"btn btn-outline-primary\" \n            type=\"button\">\n              Add task\n            </button>\n          </div>\n        </div>\n\n        {/* Didnt add a to do yet.. */}\n        {\n          _.isEmpty(props.todos) \n            && \n          _.isEmpty(props.completed_todos) \n            && \n          _.isEmpty(props.trash) \n            ?\n            <h6>Your Tasks empty :)</h6>\n            :\n            <React.Fragment>\n              {/* TODOS */}\n              <Todos drilled={({\n                title: 'Your Todos',\n                props_to_map: 'todos',\n                actions: ['complete', 'edit', 'trash']\n              })} />\n              {/* COMPLETED TODOS */}\n              <Todos drilled={({\n                title: 'Completed Todos',\n                props_to_map: 'completed_todos',\n                actions: ['uncomplete', 'edit', 'trash']\n              })} />\n              {/* TRASHED TODOS */}\n              <Todos drilled={({\n                title: 'Trashed Todos',\n                props_to_map: 'trash',\n                actions: ['uncomplete', 'edit', 'delete']\n              })} />\n            </React.Fragment>\n        }{/* END Looping through ttodos */}\n      </header>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => (state)\nconst mapDispatchToProps = {\n  addTodo,\n  completeTodo,\n  trashTodo,\n  deleteTodo\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// REDUX\nimport {Provider} from 'react-redux';\nimport {store} from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\n// Actions:\r\nconst ADD_TODO = 'ADD_TODO';\r\nconst COMPLETE_TODO = 'COMPLETE_TODO';\r\nconst TRASH_TODO = 'TRASH_TODO';\r\nconst DELETE_TODO = 'DELETE_TODO';\r\nconst UNCOMPLETE_TODO = 'UNCOMPLETE_TODO';\r\n\r\n// Actions Creators:\r\nexport const addTodo = (todo)=> {\r\n    return {\r\n        type: ADD_TODO,\r\n        payload: todo\r\n    }\r\n}\r\n\r\nexport const completeTodo = (id, state_key_where_todo_is)=> {\r\n    return {\r\n        type: COMPLETE_TODO,\r\n        payload: {\r\n            id,\r\n            state_key_where_todo_is\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteTodo = (id)=> {\r\n    return {\r\n        type: DELETE_TODO,\r\n        payload: {\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nexport const trashTodo = (id, state_key_where_todo_is)=> {\r\n    return {\r\n        type: TRASH_TODO,\r\n        payload: {\r\n            id,\r\n            state_key_where_todo_is\r\n        }\r\n    }\r\n}\r\n\r\nexport const uncompleteTodo = (id, state_key_where_todo_is)=> {\r\n    return {\r\n        type: UNCOMPLETE_TODO,\r\n        payload: {\r\n            id,\r\n            state_key_where_todo_is\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * single todo Model object:\r\n * {\r\n *  id: Number\r\n *  description: String,\r\n *  history: Array,\r\n *  completed: Bolean,\r\n *  isEditing: Bolean\r\n * }\r\n */\r\n\r\n function add_to_another_key_in_state__action(state, action, currentKey, additional_properties = null){\r\n    // refactored action that repeated itself\r\n    if (additional_properties) {\r\n        return {\r\n            ...state,\r\n            [action.payload.state_key_where_todo_is]: [\r\n                ...state[action.payload.state_key_where_todo_is].filter(todo=>todo.id!==action.payload.id)\r\n            ],\r\n            [currentKey]: [\r\n                ...state[currentKey], \r\n                {\r\n                    ...state[action.payload.state_key_where_todo_is].find(todo=>todo.id===action.payload.id),\r\n                    ...additional_properties\r\n                }\r\n            ],\r\n        }        \r\n    } else {\r\n        return {\r\n            ...state,\r\n            // save in trash the deleted tasks\r\n            [action.payload.state_key_where_todo_is]: [\r\n                ...state[action.payload.state_key_where_todo_is].filter(todo=>todo.id!==action.payload.id)\r\n            ],\r\n            [currentKey]: [\r\n                ...state[currentKey], \r\n                state[action.payload.state_key_where_todo_is].find(todo=>todo.id===action.payload.id),\r\n            ],\r\n        }        \r\n    }\r\n}\r\n\r\nconst initalState = {\r\n    todos:[],\r\n    trash: [],\r\n    completed_todos: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nfunction rootReducer(state = initalState, action){\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            console.log('STORE: acion.type===ADD_TODO')\r\n            return {\r\n                ...state,\r\n                todos: [...state.todos, {\r\n                    id: Math.floor(Math.random() * 100),\r\n                    description: action.payload,\r\n                    completed: false,\r\n                    history: [],\r\n                    createdAt: new Date().toJSON().slice(0,10).replace(/-/g,'/'),\r\n                }],\r\n                error: null\r\n            }\r\n\r\n        case COMPLETE_TODO:\r\n            console.log('STORE: acion.type===COMPLETE_TODO')\r\n            return add_to_another_key_in_state__action(state, action, 'completed_todos', {completed: true});\r\n\r\n        case TRASH_TODO:\r\n            console.log('STORE: acion.type===TRASH_TODO')\r\n            console.log('STORE: state_key_where_todo_is', action.payload.state_key_where_todo_is, state[action.payload.state_key_where_todo_is])\r\n            return add_to_another_key_in_state__action(state, action, 'trash');\r\n\r\n        case DELETE_TODO:\r\n            console.log('STORE: acion.type===DELETE_TODO')\r\n            return {\r\n                ...state,\r\n                // save in trash the deleted tasks\r\n                trash: [...state.trash, state.todos.find(todo=>todo.id===action.payload.id)],\r\n                todos: [\r\n                    ...state.todos.filter(todo=>todo.id!==action.payload.id),\r\n                ],\r\n            }\r\n\r\n        case UNCOMPLETE_TODO:\r\n            console.log('STORE: acion.type===UNCOMPLETE_TODO')\r\n            console.log('STORE:state[action.payload.state_key_where_todo_is]', state[action.payload.state_key_where_todo_is])\r\n            return {\r\n                ...state,\r\n                // remove the todo from the current key that he is right now\r\n                // add him to the \"todos\" key\r\n                todos: [\r\n                    ...state.todos,\r\n                    state[action.payload.state_key_where_todo_is].find(todo=>todo.id===action.payload.id)\r\n                ],\r\n                [action.payload.state_key_where_todo_is]: [\r\n                    ...state[action.payload.state_key_where_todo_is].filter(todo=>todo.id!==action.payload.id)\r\n                ],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nexport const store = createStore(rootReducer, initalState, composeWithDevTools(applyMiddleware(...middleware)))"],"sourceRoot":""}